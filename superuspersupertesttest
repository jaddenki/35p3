from __future__ import print_function # use python 3 syntax but make it compatible with python 2
from __future__ import division       

import numpy as np
import matplotlib.pyplot as p
import sys
import time     # import the time library for the sleep function



# Functions =======================================================

def turnRight():
    print("I turn right")
            
def turnLeft():
    print("I turn left")

def goForward():
    print("I went forward once!")
            
# Variables ==================================================

cpx = 0
cpy = 0

wpx = int(input("wpx: "))
wpy = int(input("wpy: "))

ob1x = int(input("ob1x: "))
ob1y = int(input("ob1y: "))

ob2x = int(input("ob2x: "))
ob2y =  int(input("ob2y: "))

x = 1 # true
pos = 'right'

# Logic =====================================================

place = [[0.3]]

try:
    while (x == 1):
        if ((cpx == wpx) and (cpy == wpy)):
            x = 0
        else:
            
            while (cpx != wpx):
                print(f'({cpx}, {cpy})')
                if (((cpx + 1) == ob1x) and (cpy == ob1y)) or (((cpx + 1) == ob2x) and (cpy == ob2y)):
                    turnLeft()
                    goForward()
                    cpy += 1
                    place.append([])
                    for i in range(0, cpx, 1):
                        place[cpy].append(1)
                    place[cpy].append(.3)                    
                    turnRight()
                elif (cpx > wpx):
                    if (pos == 'up'):
                        turnLeft()
                        pos = 'left'
                        goForward()
                        cpx -= 1
                        place[cpy][cpx] = 0
                    elif (pos == 'right') and ((cpy + 1 != ob1y ) or (cpy + 1 != ob2y)):
                        turnLeft()
                        pos = 'up'
                        goForward()
                        cpy += 1
                        place.append([])
                        for i in range(0, cpx, 1):
                            place[cpy].append(1)
                        place[cpy].append(.3)                        
                    else:
                        turnLeft()
                        turnLeft()
                        pos = 'left'
                        goForward()
                        cpx -= 1
                        place[cpy][cpx] = 0
                else:
                    if (pos == 'up'):
                        turnRight()
                        pos = 'right'
                        goForward()
                        cpx += 1
                        place[cpy].append(.3)
                        for i in range(0, len(place), 1):
                            if (i != cpy):
                                place[i].append(1)                        
                    else:
                        goForward()
                        cpx += 1
                        place[cpy].append(0.3)
                        for i in range(0, len(place), 1):
                            if (i != cpy):
                                place[i].append(1)
                        
            while (cpy != wpy):
                print(pos)
                print(f'({cpx}, {cpy})')
                if (((cpy + 1) == ob1y) and (cpx == ob1x)) or ((cpy + 1) == ob2y and (cpx == ob2x)):
                    if (cpx == 3):
                        turnLeft()
                        turnLeft()
                        goForward()
                        cpx -= 1
                        place[cpy][cpx] = 0
                        turnRight()
                        goForward()
                        pos = 'up'
                    elif (cpx == 0):
                        if (pos == 'up'):
                            print("im where i should be")
                            turnRight()
                            pos = 'right'
                        goForward()
                        cpx += 1
                        place[cpy].append(0.3)
                        for i in range(0, len(place), 1):
                            if (i != cpy):
                                place[i].append(1)                        
                    else:
                        if (cpx == 0) and (cpy == 0):
                            print("im hereeee")
                            turnLeft()
                            pos = 'up'
                        print("im here")
                        turnRight()
                        pos = 'right'
                        goForward()
                        cpx += 1
                        place[cpy].append(0.3)
                        for i in range(0, len(place), 1):
                            if (i != cpy):
                                place[i].append(1)                       
                else:
                    if (pos == 'right'):
                        print("am i here")
                        turnLeft()
                        pos = 'up'
                    print("I am here")    
                    goForward()
                    cpy += 1
                    place.append([])
                    for i in range(0, cpx, 1):
                        place[cpy].append(1)
                    place[cpy].append(0.3)                    
    print(place)
    Xaxis = np.linspace(0,4,1)
    Yaxis = np.linspace(0,4,1)
    [X,Y] = np.meshgrid(Xaxis, Yaxis)
    
    place = np.transpose(place) # flip??
    place = np.rot90(place, 1, (0,1)) # rotate???
    p.imshow(place, cmap = 'YlGnBu_r', interpolation = 'nearest') 
    p.show() 
                      
except KeyboardInterrupt:
    print("u pressed ctrl + c")
    sys.exit
